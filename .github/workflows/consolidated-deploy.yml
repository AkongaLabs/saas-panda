# Consolidated Repository CI/CD Pipeline
# Builds and deploys all three projects from the unified repository

name: Consolidated Deploy
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-and-build:
    name: Test and Build All Projects
    runs-on: ubuntu-latest

    steps:
      - name: Checkout consolidated repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.16.0'
          cache: 'yarn'
          cache-dependency-path: |
            server-panda/yarn.lock
            a-working-panda/yarn.lock
            landing-panda/yarn.lock

      - name: Install server dependencies
        working-directory: server-panda
        run: yarn install --frozen-lockfile

      - name: Install React app dependencies
        working-directory: a-working-panda
        run: yarn install --frozen-lockfile

      - name: Install landing site dependencies
        working-directory: landing-panda
        run: yarn install --frozen-lockfile

      - name: Lint server code
        working-directory: server-panda
        run: yarn lint || echo "Linting completed with warnings"

      - name: Lint React app
        working-directory: a-working-panda
        run: yarn lint || echo "Linting completed with warnings"

      - name: Build server
        working-directory: server-panda
        run: yarn build

      - name: Build React app
        working-directory: a-working-panda
        run: yarn build

      - name: Build landing site
        working-directory: landing-panda
        run: yarn build

      - name: Upload server build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: server-build
          path: server-panda/dist/

      - name: Upload React app build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: react-app-build
          path: a-working-panda/dist/

      - name: Upload landing site build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: landing-site-build
          path: landing-panda/dist/

  deploy-server:
    name: Deploy Server to Fly.io
    runs-on: ubuntu-latest
    needs: test-and-build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    concurrency: deploy-server-group

    steps:
      - name: Checkout consolidated repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.16.0'
          cache: 'yarn'
          cache-dependency-path: |
            server-panda/yarn.lock
            a-working-panda/yarn.lock

      - name: Install server dependencies
        working-directory: server-panda
        run: yarn install --frozen-lockfile

      - name: Install React app dependencies (for UI build)
        working-directory: a-working-panda
        run: yarn install --frozen-lockfile

      - name: Build UI for server
        working-directory: server-panda
        run: yarn build:ui

      - name: Setup Fly.io CLI
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy to Fly.io
        working-directory: server-panda
        run: flyctl deploy --remote-only --build-arg CACHE_BUST=${{ github.sha }}
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  deploy-react-app:
    name: Deploy React App
    runs-on: ubuntu-latest
    needs: test-and-build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout consolidated repository
        uses: actions/checkout@v4

      - name: Download React app build artifacts
        uses: actions/download-artifact@v4
        with:
          name: react-app-build
          path: a-working-panda/dist/

      # Add your React app deployment steps here
      # Example for Netlify:
      # - name: Deploy to Netlify
      #   uses: nwtgck/actions-netlify@v2.1
      #   with:
      #     publish-dir: './a-working-panda/dist'
      #     production-branch: main
      #   env:
      #     NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      #     NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

      - name: Deployment placeholder
        run: echo "Add your React app deployment steps here (Netlify, Vercel, etc.)"

  deploy-landing-site:
    name: Deploy Landing Site
    runs-on: ubuntu-latest
    needs: test-and-build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout consolidated repository
        uses: actions/checkout@v4

      - name: Download landing site build artifacts
        uses: actions/download-artifact@v4
        with:
          name: landing-site-build
          path: landing-panda/dist/

      # Add your Astro site deployment steps here
      # Example for Netlify:
      # - name: Deploy to Netlify
      #   uses: nwtgck/actions-netlify@v2.1
      #   with:
      #     publish-dir: './landing-panda/dist'
      #     production-branch: main
      #   env:
      #     NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      #     NETLIFY_SITE_ID: ${{ secrets.NETLIFY_LANDING_SITE_ID }}

      - name: Deployment placeholder
        run: echo "Add your Astro landing site deployment steps here (Netlify, Vercel, etc.)"

  notify-completion:
    name: Notify Deployment Completion
    runs-on: ubuntu-latest
    needs: [deploy-server, deploy-react-app, deploy-landing-site]
    if: always() && github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Deployment Summary
        run: |
          echo "ðŸŽ‰ Consolidated deployment completed!"
          echo "âœ… Server: ${{ needs.deploy-server.result }}"
          echo "âœ… React App: ${{ needs.deploy-react-app.result }}"
          echo "âœ… Landing Site: ${{ needs.deploy-landing-site.result }}"
